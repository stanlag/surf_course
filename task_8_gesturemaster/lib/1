import 'dart:math';

import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatefulWidget {
  const MyApp({super.key});

  @override
  State<MyApp> createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  bool selected = false;
  bool isRotated = false;
  double x = 100.0;
  double y = 200.0;
  @override
  Widget build(BuildContext context) {
    double width = Random().nextDouble() * 100;
    double height = Random().nextDouble() * 100;
    Color color = Color.fromRGBO(
        Random().nextInt(256), Random().nextInt(256), Random().nextInt(256), 1);
    return MaterialApp(
        title: 'Flutter Demo',
        theme: ThemeData(
          colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
          useMaterial3: true,
        ),
        home: Scaffold(
            appBar: AppBar(
              title: const Text('GestureMaster'),
              centerTitle: true,
              backgroundColor: Colors.deepPurple.shade300,
              foregroundColor: Colors.white,
            ),
            body: Stack(children: [
              Positioned(
                left: x,
                top: y,
                child: Transform.translate(
                  offset: Offset(x, y),
                  child: RotationTransition(
                    turns: AlwaysStoppedAnimation(isRotated ? 0.5 : 0.0),
                    child: AnimatedContainer(
                      width: selected ? width : 50,
                      height: selected ? height : 50,
                      color: selected ? color : color,
                      duration: const Duration(seconds: 1),
                    ),
                  ),
                ),
              ),
              Positioned.fill(
                child: GestureDetector(
                  onTap: () {
                    setState(() {
                      // selected = !selected;
                      isRotated = !isRotated;
                    });
                  },
                  onPanUpdate: (details) {
                    setState(() {
                      x += details.delta.dx;
                      y += details.delta.dy;
                    });
                  },
                  onLongPressMoveUpdate: (details) {
                    setState(() {
                      // isRotated = !isRotated;
                      // print(isRotated);
                    });
                  },
                ),
              )
            ])));
  }
}
